"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_regenerator=_interopRequireDefault(require("@babel/runtime/regenerator")),_asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));require("dotenv").config();var clear=require("clear"),fs=require("fs"),path=require("path"),chalk=require("chalk"),_require=require("process"),exit=_require.exit,_require2=require("../helpers"),migrate=_require2.migrate;clear();var ModelName=process.argv.slice(2).toString().charAt(0).toUpperCase()+process.argv.slice(2).toString().slice(1);ModelName&&""!=ModelName||(console.log(chalk.red.bold("[NodeMVC]: Model name required, run `yarn delete:model [MODEL_NAME]`")),exit(0));var ModelPath=path.join(__dirname,"../../../../app/Models/","".concat(ModelName,".js")),ControllerPath=path.join(__dirname,"../../../../app/Http/Controllers/","".concat(ModelName,"Controller.js")),DatabasePath=path.join(__dirname,"../../../../database/models/","".concat(ModelName,".js")),TestsPath=path.join(__dirname,"../../../../tests/","".concat(ModelName.toLowerCase(),".test.js"));// Remove model from default USER group role if exists
if(fs.unlinkSync(ModelPath),console.log(chalk.green.bold("[NodeMVC]: Deleting \"".concat(ModelName,"\" Model..."))),fs.unlinkSync(ControllerPath),console.log(chalk.green.bold("[NodeMVC]: Deleting \"".concat(ModelName,"Controller\" Controller..."))),fs.unlinkSync(DatabasePath),console.log(chalk.green.bold("[NodeMVC]: Deleting \"".concat(ModelName,"\" Database Schema..."))),fs.unlinkSync(TestsPath),console.log(chalk.green.bold("[NodeMVC]: Deleting \"".concat(ModelName,"\" Default Tests Suite..."))),"mongo"===process.env.DB_CONNECTION){var _require3=require("../../../Database/config/mongo"),asyncConnect=_require3.asyncConnect,disconnect=_require3.disconnect,db=_require3.models;(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function a(){var b,c;return _regenerator["default"].wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,asyncConnect();case 3:return console.log(chalk.green.bold("[NodeMVC]: Removing default role for ADMIN group if exists...")),a.next=6,db.Role.findOne({group_name:"ADMIN"},null,{lean:!0});case 6:if(b=a.sent,null==b){a.next=10;break}return a.next=10,db.Role.updateOne({group_name:"ADMIN"},{$pull:{auth_models:{model_ref_name:ModelName}}});case 10:return console.log(chalk.green.bold("[NodeMVC]: Removing default role for USER group if exists...")),a.next=13,db.Role.findOne({group_name:"USER"},null,{lean:!0});case 13:if(c=a.sent,null==c){a.next=17;break}return a.next=17,db.Role.updateOne({group_name:"USER"},{$pull:{auth_models:{model_ref_name:ModelName}}});case 17:return a.next=19,disconnect();case 19:a.next=25;break;case 21:a.prev=21,a.t0=a["catch"](0),console.log(chalk.red.bold("[NodeMVC]: ".concat(a.t0.message))),exit(0);case 25:case"end":return a.stop();}},a,null,[[0,21]])}))()}migrate();